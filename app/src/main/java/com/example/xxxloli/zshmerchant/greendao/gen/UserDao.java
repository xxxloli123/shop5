package com.example.xxxloli.zshmerchant.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.xxxloli.zshmerchant.greendao.User;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "USER".
*/
public class UserDao extends AbstractDao<User, Long> {

    public static final String TABLENAME = "USER";

    /**
     * Properties of entity User.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property WritId = new Property(0, Long.class, "writId", true, "_id");
        public final static Property Id = new Property(1, String.class, "id", false, "ID");
        public final static Property QqOpenId = new Property(2, String.class, "qqOpenId", false, "QQ_OPEN_ID");
        public final static Property WxOpenId = new Property(3, String.class, "wxOpenId", false, "WX_OPEN_ID");
        public final static Property SuperId = new Property(4, String.class, "superId", false, "SUPER_ID");
        public final static Property JobId = new Property(5, String.class, "jobId", false, "JOB_ID");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property Discount = new Property(7, String.class, "discount", false, "DISCOUNT");
        public final static Property DiscountProportion = new Property(8, int.class, "discountProportion", false, "DISCOUNT_PROPORTION");
        public final static Property Phone = new Property(9, String.class, "phone", false, "PHONE");
        public final static Property PhoneBeforeDelete = new Property(10, String.class, "phoneBeforeDelete", false, "PHONE_BEFORE_DELETE");
        public final static Property AdminId = new Property(11, String.class, "adminId", false, "ADMIN_ID");
        public final static Property TelePhone = new Property(12, String.class, "telePhone", false, "TELE_PHONE");
        public final static Property Mailbox = new Property(13, String.class, "mailbox", false, "MAILBOX");
        public final static Property Area = new Property(14, String.class, "area", false, "AREA");
        public final static Property Adcode = new Property(15, String.class, "adcode", false, "ADCODE");
        public final static Property Type = new Property(16, String.class, "type", false, "TYPE");
        public final static Property Type_value = new Property(17, String.class, "type_value", false, "TYPE_VALUE");
        public final static Property Status = new Property(18, String.class, "status", false, "STATUS");
        public final static Property Status_value = new Property(19, String.class, "status_value", false, "STATUS_VALUE");
        public final static Property ShopBusinessNumber = new Property(20, String.class, "shopBusinessNumber", false, "SHOP_BUSINESS_NUMBER");
        public final static Property ShopBusinessConfirm = new Property(21, String.class, "shopBusinessConfirm", false, "SHOP_BUSINESS_CONFIRM");
        public final static Property ShopBusinessConfirm_value = new Property(22, String.class, "shopBusinessConfirm_value", false, "SHOP_BUSINESS_CONFIRM_VALUE");
        public final static Property IdNumber = new Property(23, String.class, "idNumber", false, "ID_NUMBER");
        public final static Property IdConfirm = new Property(24, String.class, "idConfirm", false, "ID_CONFIRM");
        public final static Property IdConfirm_value = new Property(25, String.class, "idConfirm_value", false, "ID_CONFIRM_VALUE");
        public final static Property HealthyNumber = new Property(26, String.class, "healthyNumber", false, "HEALTHY_NUMBER");
        public final static Property HealthyConfirm = new Property(27, String.class, "healthyConfirm", false, "HEALTHY_CONFIRM");
        public final static Property HealthyConfirm_value = new Property(28, String.class, "healthyConfirm_value", false, "HEALTHY_CONFIRM_VALUE");
        public final static Property DrivingNumber = new Property(29, String.class, "drivingNumber", false, "DRIVING_NUMBER");
        public final static Property DrivingConfirm = new Property(30, String.class, "drivingConfirm", false, "DRIVING_CONFIRM");
        public final static Property DrivingConfirm_value = new Property(31, String.class, "drivingConfirm_value", false, "DRIVING_CONFIRM_VALUE");
        public final static Property CarNumber = new Property(32, String.class, "carNumber", false, "CAR_NUMBER");
        public final static Property CarConfirm = new Property(33, String.class, "carConfirm", false, "CAR_CONFIRM");
        public final static Property CarConfirm_value = new Property(34, String.class, "carConfirm_value", false, "CAR_CONFIRM_VALUE");
        public final static Property RegisterDate = new Property(35, String.class, "registerDate", false, "REGISTER_DATE");
        public final static Property Sex = new Property(36, String.class, "sex", false, "SEX");
        public final static Property Sex_value = new Property(37, String.class, "sex_value", false, "SEX_VALUE");
        public final static Property Token = new Property(38, String.class, "token", false, "TOKEN");
        public final static Property PhoneType = new Property(39, String.class, "phoneType", false, "PHONE_TYPE");
        public final static Property PhoneType_value = new Property(40, String.class, "phoneType_value", false, "PHONE_TYPE_VALUE");
        public final static Property NickName = new Property(41, String.class, "nickName", false, "NICK_NAME");
        public final static Property Job = new Property(42, String.class, "job", false, "JOB");
        public final static Property HeaderImg = new Property(43, String.class, "headerImg", false, "HEADER_IMG");
        public final static Property IdStartTime = new Property(44, String.class, "idStartTime", false, "ID_START_TIME");
        public final static Property IdEndTime = new Property(45, String.class, "idEndTime", false, "ID_END_TIME");
        public final static Property Brief = new Property(46, String.class, "brief", false, "BRIEF");
        public final static Property LatestLoginDatetime = new Property(47, String.class, "latestLoginDatetime", false, "LATEST_LOGIN_DATETIME");
        public final static Property Signtime = new Property(48, String.class, "signtime", false, "SIGNTIME");
        public final static Property IntegralNumber = new Property(49, int.class, "integralNumber", false, "INTEGRAL_NUMBER");
        public final static Property Lng = new Property(50, String.class, "lng", false, "LNG");
        public final static Property Lat = new Property(51, String.class, "lat", false, "LAT");
        public final static Property UpdatePositionDate = new Property(52, String.class, "updatePositionDate", false, "UPDATE_POSITION_DATE");
        public final static Property Role_name = new Property(53, String.class, "role_name", false, "ROLE_NAME");
        public final static Property Commpany_id = new Property(54, String.class, "commpany_id", false, "COMMPANY_ID");
        public final static Property Commpany_name = new Property(55, String.class, "commpany_name", false, "COMMPANY_NAME");
        public final static Property PostmanStreet = new Property(56, String.class, "postmanStreet", false, "POSTMAN_STREET");
        public final static Property Shop_id = new Property(57, String.class, "shop_id", false, "SHOP_ID");
        public final static Property Shop_name = new Property(58, String.class, "shop_name", false, "SHOP_NAME");
        public final static Property PackageNumber = new Property(59, int.class, "packageNumber", false, "PACKAGE_NUMBER");
        public final static Property ValidRecommendNumber = new Property(60, int.class, "validRecommendNumber", false, "VALID_RECOMMEND_NUMBER");
        public final static Property OnlineStatus = new Property(61, String.class, "onlineStatus", false, "ONLINE_STATUS");
        public final static Property OnlineStatus_value = new Property(62, String.class, "onlineStatus_value", false, "ONLINE_STATUS_VALUE");
        public final static Property Id2 = new Property(63, String.class, "id2", false, "ID2");
    }


    public UserDao(DaoConfig config) {
        super(config);
    }
    
    public UserDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"USER\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: writId
                "\"ID\" TEXT," + // 1: id
                "\"QQ_OPEN_ID\" TEXT," + // 2: qqOpenId
                "\"WX_OPEN_ID\" TEXT," + // 3: wxOpenId
                "\"SUPER_ID\" TEXT," + // 4: superId
                "\"JOB_ID\" TEXT," + // 5: jobId
                "\"NAME\" TEXT," + // 6: name
                "\"DISCOUNT\" TEXT," + // 7: discount
                "\"DISCOUNT_PROPORTION\" INTEGER NOT NULL ," + // 8: discountProportion
                "\"PHONE\" TEXT," + // 9: phone
                "\"PHONE_BEFORE_DELETE\" TEXT," + // 10: phoneBeforeDelete
                "\"ADMIN_ID\" TEXT," + // 11: adminId
                "\"TELE_PHONE\" TEXT," + // 12: telePhone
                "\"MAILBOX\" TEXT," + // 13: mailbox
                "\"AREA\" TEXT," + // 14: area
                "\"ADCODE\" TEXT," + // 15: adcode
                "\"TYPE\" TEXT," + // 16: type
                "\"TYPE_VALUE\" TEXT," + // 17: type_value
                "\"STATUS\" TEXT," + // 18: status
                "\"STATUS_VALUE\" TEXT," + // 19: status_value
                "\"SHOP_BUSINESS_NUMBER\" TEXT," + // 20: shopBusinessNumber
                "\"SHOP_BUSINESS_CONFIRM\" TEXT," + // 21: shopBusinessConfirm
                "\"SHOP_BUSINESS_CONFIRM_VALUE\" TEXT," + // 22: shopBusinessConfirm_value
                "\"ID_NUMBER\" TEXT," + // 23: idNumber
                "\"ID_CONFIRM\" TEXT," + // 24: idConfirm
                "\"ID_CONFIRM_VALUE\" TEXT," + // 25: idConfirm_value
                "\"HEALTHY_NUMBER\" TEXT," + // 26: healthyNumber
                "\"HEALTHY_CONFIRM\" TEXT," + // 27: healthyConfirm
                "\"HEALTHY_CONFIRM_VALUE\" TEXT," + // 28: healthyConfirm_value
                "\"DRIVING_NUMBER\" TEXT," + // 29: drivingNumber
                "\"DRIVING_CONFIRM\" TEXT," + // 30: drivingConfirm
                "\"DRIVING_CONFIRM_VALUE\" TEXT," + // 31: drivingConfirm_value
                "\"CAR_NUMBER\" TEXT," + // 32: carNumber
                "\"CAR_CONFIRM\" TEXT," + // 33: carConfirm
                "\"CAR_CONFIRM_VALUE\" TEXT," + // 34: carConfirm_value
                "\"REGISTER_DATE\" TEXT," + // 35: registerDate
                "\"SEX\" TEXT," + // 36: sex
                "\"SEX_VALUE\" TEXT," + // 37: sex_value
                "\"TOKEN\" TEXT," + // 38: token
                "\"PHONE_TYPE\" TEXT," + // 39: phoneType
                "\"PHONE_TYPE_VALUE\" TEXT," + // 40: phoneType_value
                "\"NICK_NAME\" TEXT," + // 41: nickName
                "\"JOB\" TEXT," + // 42: job
                "\"HEADER_IMG\" TEXT," + // 43: headerImg
                "\"ID_START_TIME\" TEXT," + // 44: idStartTime
                "\"ID_END_TIME\" TEXT," + // 45: idEndTime
                "\"BRIEF\" TEXT," + // 46: brief
                "\"LATEST_LOGIN_DATETIME\" TEXT," + // 47: latestLoginDatetime
                "\"SIGNTIME\" TEXT," + // 48: signtime
                "\"INTEGRAL_NUMBER\" INTEGER NOT NULL ," + // 49: integralNumber
                "\"LNG\" TEXT," + // 50: lng
                "\"LAT\" TEXT," + // 51: lat
                "\"UPDATE_POSITION_DATE\" TEXT," + // 52: updatePositionDate
                "\"ROLE_NAME\" TEXT," + // 53: role_name
                "\"COMMPANY_ID\" TEXT," + // 54: commpany_id
                "\"COMMPANY_NAME\" TEXT," + // 55: commpany_name
                "\"POSTMAN_STREET\" TEXT," + // 56: postmanStreet
                "\"SHOP_ID\" TEXT," + // 57: shop_id
                "\"SHOP_NAME\" TEXT," + // 58: shop_name
                "\"PACKAGE_NUMBER\" INTEGER NOT NULL ," + // 59: packageNumber
                "\"VALID_RECOMMEND_NUMBER\" INTEGER NOT NULL ," + // 60: validRecommendNumber
                "\"ONLINE_STATUS\" TEXT," + // 61: onlineStatus
                "\"ONLINE_STATUS_VALUE\" TEXT," + // 62: onlineStatus_value
                "\"ID2\" TEXT);"); // 63: id2
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"USER\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, User entity) {
        stmt.clearBindings();
 
        Long writId = entity.getWritId();
        if (writId != null) {
            stmt.bindLong(1, writId);
        }
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(2, id);
        }
 
        String qqOpenId = entity.getQqOpenId();
        if (qqOpenId != null) {
            stmt.bindString(3, qqOpenId);
        }
 
        String wxOpenId = entity.getWxOpenId();
        if (wxOpenId != null) {
            stmt.bindString(4, wxOpenId);
        }
 
        String superId = entity.getSuperId();
        if (superId != null) {
            stmt.bindString(5, superId);
        }
 
        String jobId = entity.getJobId();
        if (jobId != null) {
            stmt.bindString(6, jobId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String discount = entity.getDiscount();
        if (discount != null) {
            stmt.bindString(8, discount);
        }
        stmt.bindLong(9, entity.getDiscountProportion());
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(10, phone);
        }
 
        String phoneBeforeDelete = entity.getPhoneBeforeDelete();
        if (phoneBeforeDelete != null) {
            stmt.bindString(11, phoneBeforeDelete);
        }
 
        String adminId = entity.getAdminId();
        if (adminId != null) {
            stmt.bindString(12, adminId);
        }
 
        String telePhone = entity.getTelePhone();
        if (telePhone != null) {
            stmt.bindString(13, telePhone);
        }
 
        String mailbox = entity.getMailbox();
        if (mailbox != null) {
            stmt.bindString(14, mailbox);
        }
 
        String area = entity.getArea();
        if (area != null) {
            stmt.bindString(15, area);
        }
 
        String adcode = entity.getAdcode();
        if (adcode != null) {
            stmt.bindString(16, adcode);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(17, type);
        }
 
        String type_value = entity.getType_value();
        if (type_value != null) {
            stmt.bindString(18, type_value);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(19, status);
        }
 
        String status_value = entity.getStatus_value();
        if (status_value != null) {
            stmt.bindString(20, status_value);
        }
 
        String shopBusinessNumber = entity.getShopBusinessNumber();
        if (shopBusinessNumber != null) {
            stmt.bindString(21, shopBusinessNumber);
        }
 
        String shopBusinessConfirm = entity.getShopBusinessConfirm();
        if (shopBusinessConfirm != null) {
            stmt.bindString(22, shopBusinessConfirm);
        }
 
        String shopBusinessConfirm_value = entity.getShopBusinessConfirm_value();
        if (shopBusinessConfirm_value != null) {
            stmt.bindString(23, shopBusinessConfirm_value);
        }
 
        String idNumber = entity.getIdNumber();
        if (idNumber != null) {
            stmt.bindString(24, idNumber);
        }
 
        String idConfirm = entity.getIdConfirm();
        if (idConfirm != null) {
            stmt.bindString(25, idConfirm);
        }
 
        String idConfirm_value = entity.getIdConfirm_value();
        if (idConfirm_value != null) {
            stmt.bindString(26, idConfirm_value);
        }
 
        String healthyNumber = entity.getHealthyNumber();
        if (healthyNumber != null) {
            stmt.bindString(27, healthyNumber);
        }
 
        String healthyConfirm = entity.getHealthyConfirm();
        if (healthyConfirm != null) {
            stmt.bindString(28, healthyConfirm);
        }
 
        String healthyConfirm_value = entity.getHealthyConfirm_value();
        if (healthyConfirm_value != null) {
            stmt.bindString(29, healthyConfirm_value);
        }
 
        String drivingNumber = entity.getDrivingNumber();
        if (drivingNumber != null) {
            stmt.bindString(30, drivingNumber);
        }
 
        String drivingConfirm = entity.getDrivingConfirm();
        if (drivingConfirm != null) {
            stmt.bindString(31, drivingConfirm);
        }
 
        String drivingConfirm_value = entity.getDrivingConfirm_value();
        if (drivingConfirm_value != null) {
            stmt.bindString(32, drivingConfirm_value);
        }
 
        String carNumber = entity.getCarNumber();
        if (carNumber != null) {
            stmt.bindString(33, carNumber);
        }
 
        String carConfirm = entity.getCarConfirm();
        if (carConfirm != null) {
            stmt.bindString(34, carConfirm);
        }
 
        String carConfirm_value = entity.getCarConfirm_value();
        if (carConfirm_value != null) {
            stmt.bindString(35, carConfirm_value);
        }
 
        String registerDate = entity.getRegisterDate();
        if (registerDate != null) {
            stmt.bindString(36, registerDate);
        }
 
        String sex = entity.getSex();
        if (sex != null) {
            stmt.bindString(37, sex);
        }
 
        String sex_value = entity.getSex_value();
        if (sex_value != null) {
            stmt.bindString(38, sex_value);
        }
 
        String token = entity.getToken();
        if (token != null) {
            stmt.bindString(39, token);
        }
 
        String phoneType = entity.getPhoneType();
        if (phoneType != null) {
            stmt.bindString(40, phoneType);
        }
 
        String phoneType_value = entity.getPhoneType_value();
        if (phoneType_value != null) {
            stmt.bindString(41, phoneType_value);
        }
 
        String nickName = entity.getNickName();
        if (nickName != null) {
            stmt.bindString(42, nickName);
        }
 
        String job = entity.getJob();
        if (job != null) {
            stmt.bindString(43, job);
        }
 
        String headerImg = entity.getHeaderImg();
        if (headerImg != null) {
            stmt.bindString(44, headerImg);
        }
 
        String idStartTime = entity.getIdStartTime();
        if (idStartTime != null) {
            stmt.bindString(45, idStartTime);
        }
 
        String idEndTime = entity.getIdEndTime();
        if (idEndTime != null) {
            stmt.bindString(46, idEndTime);
        }
 
        String brief = entity.getBrief();
        if (brief != null) {
            stmt.bindString(47, brief);
        }
 
        String latestLoginDatetime = entity.getLatestLoginDatetime();
        if (latestLoginDatetime != null) {
            stmt.bindString(48, latestLoginDatetime);
        }
 
        String signtime = entity.getSigntime();
        if (signtime != null) {
            stmt.bindString(49, signtime);
        }
        stmt.bindLong(50, entity.getIntegralNumber());
 
        String lng = entity.getLng();
        if (lng != null) {
            stmt.bindString(51, lng);
        }
 
        String lat = entity.getLat();
        if (lat != null) {
            stmt.bindString(52, lat);
        }
 
        String updatePositionDate = entity.getUpdatePositionDate();
        if (updatePositionDate != null) {
            stmt.bindString(53, updatePositionDate);
        }
 
        String role_name = entity.getRole_name();
        if (role_name != null) {
            stmt.bindString(54, role_name);
        }
 
        String commpany_id = entity.getCommpany_id();
        if (commpany_id != null) {
            stmt.bindString(55, commpany_id);
        }
 
        String commpany_name = entity.getCommpany_name();
        if (commpany_name != null) {
            stmt.bindString(56, commpany_name);
        }
 
        String postmanStreet = entity.getPostmanStreet();
        if (postmanStreet != null) {
            stmt.bindString(57, postmanStreet);
        }
 
        String shop_id = entity.getShop_id();
        if (shop_id != null) {
            stmt.bindString(58, shop_id);
        }
 
        String shop_name = entity.getShop_name();
        if (shop_name != null) {
            stmt.bindString(59, shop_name);
        }
        stmt.bindLong(60, entity.getPackageNumber());
        stmt.bindLong(61, entity.getValidRecommendNumber());
 
        String onlineStatus = entity.getOnlineStatus();
        if (onlineStatus != null) {
            stmt.bindString(62, onlineStatus);
        }
 
        String onlineStatus_value = entity.getOnlineStatus_value();
        if (onlineStatus_value != null) {
            stmt.bindString(63, onlineStatus_value);
        }
 
        String id2 = entity.getId2();
        if (id2 != null) {
            stmt.bindString(64, id2);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, User entity) {
        stmt.clearBindings();
 
        Long writId = entity.getWritId();
        if (writId != null) {
            stmt.bindLong(1, writId);
        }
 
        String id = entity.getId();
        if (id != null) {
            stmt.bindString(2, id);
        }
 
        String qqOpenId = entity.getQqOpenId();
        if (qqOpenId != null) {
            stmt.bindString(3, qqOpenId);
        }
 
        String wxOpenId = entity.getWxOpenId();
        if (wxOpenId != null) {
            stmt.bindString(4, wxOpenId);
        }
 
        String superId = entity.getSuperId();
        if (superId != null) {
            stmt.bindString(5, superId);
        }
 
        String jobId = entity.getJobId();
        if (jobId != null) {
            stmt.bindString(6, jobId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String discount = entity.getDiscount();
        if (discount != null) {
            stmt.bindString(8, discount);
        }
        stmt.bindLong(9, entity.getDiscountProportion());
 
        String phone = entity.getPhone();
        if (phone != null) {
            stmt.bindString(10, phone);
        }
 
        String phoneBeforeDelete = entity.getPhoneBeforeDelete();
        if (phoneBeforeDelete != null) {
            stmt.bindString(11, phoneBeforeDelete);
        }
 
        String adminId = entity.getAdminId();
        if (adminId != null) {
            stmt.bindString(12, adminId);
        }
 
        String telePhone = entity.getTelePhone();
        if (telePhone != null) {
            stmt.bindString(13, telePhone);
        }
 
        String mailbox = entity.getMailbox();
        if (mailbox != null) {
            stmt.bindString(14, mailbox);
        }
 
        String area = entity.getArea();
        if (area != null) {
            stmt.bindString(15, area);
        }
 
        String adcode = entity.getAdcode();
        if (adcode != null) {
            stmt.bindString(16, adcode);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(17, type);
        }
 
        String type_value = entity.getType_value();
        if (type_value != null) {
            stmt.bindString(18, type_value);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(19, status);
        }
 
        String status_value = entity.getStatus_value();
        if (status_value != null) {
            stmt.bindString(20, status_value);
        }
 
        String shopBusinessNumber = entity.getShopBusinessNumber();
        if (shopBusinessNumber != null) {
            stmt.bindString(21, shopBusinessNumber);
        }
 
        String shopBusinessConfirm = entity.getShopBusinessConfirm();
        if (shopBusinessConfirm != null) {
            stmt.bindString(22, shopBusinessConfirm);
        }
 
        String shopBusinessConfirm_value = entity.getShopBusinessConfirm_value();
        if (shopBusinessConfirm_value != null) {
            stmt.bindString(23, shopBusinessConfirm_value);
        }
 
        String idNumber = entity.getIdNumber();
        if (idNumber != null) {
            stmt.bindString(24, idNumber);
        }
 
        String idConfirm = entity.getIdConfirm();
        if (idConfirm != null) {
            stmt.bindString(25, idConfirm);
        }
 
        String idConfirm_value = entity.getIdConfirm_value();
        if (idConfirm_value != null) {
            stmt.bindString(26, idConfirm_value);
        }
 
        String healthyNumber = entity.getHealthyNumber();
        if (healthyNumber != null) {
            stmt.bindString(27, healthyNumber);
        }
 
        String healthyConfirm = entity.getHealthyConfirm();
        if (healthyConfirm != null) {
            stmt.bindString(28, healthyConfirm);
        }
 
        String healthyConfirm_value = entity.getHealthyConfirm_value();
        if (healthyConfirm_value != null) {
            stmt.bindString(29, healthyConfirm_value);
        }
 
        String drivingNumber = entity.getDrivingNumber();
        if (drivingNumber != null) {
            stmt.bindString(30, drivingNumber);
        }
 
        String drivingConfirm = entity.getDrivingConfirm();
        if (drivingConfirm != null) {
            stmt.bindString(31, drivingConfirm);
        }
 
        String drivingConfirm_value = entity.getDrivingConfirm_value();
        if (drivingConfirm_value != null) {
            stmt.bindString(32, drivingConfirm_value);
        }
 
        String carNumber = entity.getCarNumber();
        if (carNumber != null) {
            stmt.bindString(33, carNumber);
        }
 
        String carConfirm = entity.getCarConfirm();
        if (carConfirm != null) {
            stmt.bindString(34, carConfirm);
        }
 
        String carConfirm_value = entity.getCarConfirm_value();
        if (carConfirm_value != null) {
            stmt.bindString(35, carConfirm_value);
        }
 
        String registerDate = entity.getRegisterDate();
        if (registerDate != null) {
            stmt.bindString(36, registerDate);
        }
 
        String sex = entity.getSex();
        if (sex != null) {
            stmt.bindString(37, sex);
        }
 
        String sex_value = entity.getSex_value();
        if (sex_value != null) {
            stmt.bindString(38, sex_value);
        }
 
        String token = entity.getToken();
        if (token != null) {
            stmt.bindString(39, token);
        }
 
        String phoneType = entity.getPhoneType();
        if (phoneType != null) {
            stmt.bindString(40, phoneType);
        }
 
        String phoneType_value = entity.getPhoneType_value();
        if (phoneType_value != null) {
            stmt.bindString(41, phoneType_value);
        }
 
        String nickName = entity.getNickName();
        if (nickName != null) {
            stmt.bindString(42, nickName);
        }
 
        String job = entity.getJob();
        if (job != null) {
            stmt.bindString(43, job);
        }
 
        String headerImg = entity.getHeaderImg();
        if (headerImg != null) {
            stmt.bindString(44, headerImg);
        }
 
        String idStartTime = entity.getIdStartTime();
        if (idStartTime != null) {
            stmt.bindString(45, idStartTime);
        }
 
        String idEndTime = entity.getIdEndTime();
        if (idEndTime != null) {
            stmt.bindString(46, idEndTime);
        }
 
        String brief = entity.getBrief();
        if (brief != null) {
            stmt.bindString(47, brief);
        }
 
        String latestLoginDatetime = entity.getLatestLoginDatetime();
        if (latestLoginDatetime != null) {
            stmt.bindString(48, latestLoginDatetime);
        }
 
        String signtime = entity.getSigntime();
        if (signtime != null) {
            stmt.bindString(49, signtime);
        }
        stmt.bindLong(50, entity.getIntegralNumber());
 
        String lng = entity.getLng();
        if (lng != null) {
            stmt.bindString(51, lng);
        }
 
        String lat = entity.getLat();
        if (lat != null) {
            stmt.bindString(52, lat);
        }
 
        String updatePositionDate = entity.getUpdatePositionDate();
        if (updatePositionDate != null) {
            stmt.bindString(53, updatePositionDate);
        }
 
        String role_name = entity.getRole_name();
        if (role_name != null) {
            stmt.bindString(54, role_name);
        }
 
        String commpany_id = entity.getCommpany_id();
        if (commpany_id != null) {
            stmt.bindString(55, commpany_id);
        }
 
        String commpany_name = entity.getCommpany_name();
        if (commpany_name != null) {
            stmt.bindString(56, commpany_name);
        }
 
        String postmanStreet = entity.getPostmanStreet();
        if (postmanStreet != null) {
            stmt.bindString(57, postmanStreet);
        }
 
        String shop_id = entity.getShop_id();
        if (shop_id != null) {
            stmt.bindString(58, shop_id);
        }
 
        String shop_name = entity.getShop_name();
        if (shop_name != null) {
            stmt.bindString(59, shop_name);
        }
        stmt.bindLong(60, entity.getPackageNumber());
        stmt.bindLong(61, entity.getValidRecommendNumber());
 
        String onlineStatus = entity.getOnlineStatus();
        if (onlineStatus != null) {
            stmt.bindString(62, onlineStatus);
        }
 
        String onlineStatus_value = entity.getOnlineStatus_value();
        if (onlineStatus_value != null) {
            stmt.bindString(63, onlineStatus_value);
        }
 
        String id2 = entity.getId2();
        if (id2 != null) {
            stmt.bindString(64, id2);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public User readEntity(Cursor cursor, int offset) {
        User entity = new User( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // writId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // qqOpenId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // wxOpenId
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // superId
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jobId
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // discount
            cursor.getInt(offset + 8), // discountProportion
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // phone
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // phoneBeforeDelete
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // adminId
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // telePhone
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // mailbox
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // area
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // adcode
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // type
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // type_value
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // status
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // status_value
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // shopBusinessNumber
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // shopBusinessConfirm
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // shopBusinessConfirm_value
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // idNumber
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // idConfirm
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // idConfirm_value
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // healthyNumber
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // healthyConfirm
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // healthyConfirm_value
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // drivingNumber
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // drivingConfirm
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // drivingConfirm_value
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // carNumber
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // carConfirm
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // carConfirm_value
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // registerDate
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // sex
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // sex_value
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // token
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // phoneType
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // phoneType_value
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // nickName
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // job
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // headerImg
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // idStartTime
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // idEndTime
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // brief
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // latestLoginDatetime
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // signtime
            cursor.getInt(offset + 49), // integralNumber
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // lng
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // lat
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // updatePositionDate
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // role_name
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // commpany_id
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // commpany_name
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // postmanStreet
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // shop_id
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // shop_name
            cursor.getInt(offset + 59), // packageNumber
            cursor.getInt(offset + 60), // validRecommendNumber
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // onlineStatus
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // onlineStatus_value
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63) // id2
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, User entity, int offset) {
        entity.setWritId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setQqOpenId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setWxOpenId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSuperId(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJobId(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setDiscount(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDiscountProportion(cursor.getInt(offset + 8));
        entity.setPhone(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setPhoneBeforeDelete(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAdminId(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setTelePhone(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setMailbox(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setArea(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setAdcode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setType(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setType_value(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setStatus(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setStatus_value(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setShopBusinessNumber(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setShopBusinessConfirm(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setShopBusinessConfirm_value(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setIdNumber(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIdConfirm(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setIdConfirm_value(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setHealthyNumber(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setHealthyConfirm(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setHealthyConfirm_value(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setDrivingNumber(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setDrivingConfirm(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setDrivingConfirm_value(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setCarNumber(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setCarConfirm(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setCarConfirm_value(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setRegisterDate(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setSex(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setSex_value(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setToken(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setPhoneType(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setPhoneType_value(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setNickName(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setJob(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setHeaderImg(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setIdStartTime(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setIdEndTime(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setBrief(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setLatestLoginDatetime(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setSigntime(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setIntegralNumber(cursor.getInt(offset + 49));
        entity.setLng(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setLat(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setUpdatePositionDate(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setRole_name(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setCommpany_id(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setCommpany_name(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setPostmanStreet(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setShop_id(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setShop_name(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setPackageNumber(cursor.getInt(offset + 59));
        entity.setValidRecommendNumber(cursor.getInt(offset + 60));
        entity.setOnlineStatus(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setOnlineStatus_value(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setId2(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(User entity, long rowId) {
        entity.setWritId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(User entity) {
        if(entity != null) {
            return entity.getWritId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(User entity) {
        return entity.getWritId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
